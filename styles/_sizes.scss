@use "breakpoints";

$base: calc((1vh + 1vw) / 2);

.padding-x-small {
  padding: 1.2rem;
  @include breakpoints.min(medium) {
    padding: 0.9rem;
  }
  @include breakpoints.min(large) {
    padding: 0.6rem;
  }
}
.padding-small {
  padding: 1.6rem;
  @include breakpoints.min(medium) {
    padding: 1.3rem;
  }
  @include breakpoints.min(large) {
    padding: 1rem;
  }
}
.padding-medium {
  padding: 2.1rem;
  @include breakpoints.min(medium) {
    padding: 1.8rem;
  }
  @include breakpoints.min(large) {
    padding: 1.4rem;
  }
}
.padding-large {
  padding: 3rem;
  @include breakpoints.min(medium) {
    padding: 2.6rem;
  }
  @include breakpoints.min(large) {
    padding: 2.2rem;
  }
}
.padding-x-large {
  padding: 5.6rem;
  @include breakpoints.min(medium) {
    padding: 5.1rem;
  }
  @include breakpoints.min(large) {
    padding: 4.8rem;
  }
}
.margin-top-x-large {
  margin-top: 5.6rem;
  @include breakpoints.min(medium) {
    margin-top: 5.1rem;
  }
  @include breakpoints.min(large) {
    margin-top: 4.8rem;
  }
}
.margin-bottom-large {
  margin-bottom: 3rem;
  @include breakpoints.min(medium) {
    margin-bottom: 2.6rem;
  }
  @include breakpoints.min(large) {
    margin-bottom: 2.2rem;
  }
}
.margin-bottom-medium {
  margin-bottom: 2.1rem;
  @include breakpoints.min(medium) {
    margin-bottom: 1.8rem;
  }
  @include breakpoints.min(large) {
    margin-bottom: 1.4rem;
  }
}

@function calcSizeOfVwPlusVhDividedByTwo($size) {
  $sizevh: $size * 1vh;
  $sizevw: $size * 1vw;
  $result: calc(($sizevh + $sizevw) / 2);
  @return $result;
}
